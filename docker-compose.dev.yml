version: '3.8'

services:
  # PostgreSQL database for Auth API
  auth-postgres:
    image: postgres:17.0
    container_name: auth-postgres-dev
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password
      POSTGRES_DB: auth_db
    volumes:
      - auth_postgres_data_dev:/var/lib/postgresql/data
    networks:
      - dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth_user -d auth_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL database for Product API
  product-postgres:
    image: postgres:17.0
    container_name: product-postgres-dev
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: product_user
      POSTGRES_PASSWORD: product_password
      POSTGRES_DB: product_db
    volumes:
      - product_postgres_data_dev:/var/lib/postgresql/data
    networks:
      - dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U product_user -d product_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq-dev
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data_dev:/var/lib/rabbitmq
    networks:
      - dev-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  auth_postgres_data_dev:
  product_postgres_data_dev:
  rabbitmq_data_dev:

networks:
  dev-network:
    driver: bridge
